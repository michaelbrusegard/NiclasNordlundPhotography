<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Admin | Niclas Nordlund Photography</title>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet" />
        <style>
            * {
                font-family: 'Poppins', sans-serif;
            }
            body {
                background-color: #f0f0f0;
                font-size: 18px;
            }
        </style>
    </head>
    <body>
        <h1>Admin Panel</h1>
        <button id="logoutButton">Logout</button>
        <p id="sectionParagraph"></p>
        <label for="sectionSelect">Select section:</label>
        <select id="sectionSelect">
            <option value="showcase">Showcase</option>
            <option value="shop">Shop</option>
        </select>
        <button id="sectionButton">Load</button>
        <div id="sectionContent"></div>
        <script>
            const token = '<%= csrfToken %>';

            const sectionParagraph = document.getElementById('sectionParagraph');
            const kindMessages = [
                'Du gör ett fantastiskt jobb!',
                'Ditt arbete är verkligen inspirerande!',
                'Håll det fantastiska arbetet uppe!',
                'Din fotografi är enastående!',
                'Ditt talang känner inga gränser!',
                'Din kreativitet är imponerande!',
                'Din passion för fotografi är beundransvärd!',
                'Du fångar ögonblicken på ett underbart sätt!',
                'Ditt arbete sprider glädje och skönhet!',
                'Din fotografiska skicklighet är en gåva!',
                'Din skapande förmåga är oöverträffad!',
                'Dina bilder berättar fantastiska historier!',
                'Du har en unik talang inom fotografi!',
                'Din känsla för komposition är fantastisk!',
                'Ditt öga för detaljer är imponerande!',
                'Dina bilder är som konstverk!',
                'Ditt arbete förevigar ögonblick på bästa sätt!',
                'Du fångar magiska stunder med din kamera!',
                'Din skaparkraft är en förebild!',
                'Ditt fotografi är en glädje för ögat!',
                'Din dedikation till konsten är beundransvärd!',
                'Din passion för fotografi strålar igenom dina bilder!',
                'Du är en mästare av ljus och skugga!',
                'Ditt arbete är en inspirationskälla!',
                'Du lyfter fram det vackra i vardagen!',
                'Dina bilder är fulla av liv och känsla!',
                'Din skicklighet inom fotografi är fenomenal!',
                'Ditt arbete är en glädje att betrakta!',
                'Dina bilder är en resa genom skönhet och kreativitet!',
                'Du skapar magi med din kamera!',
                'Din passion för fotografi är smittsam!',
                'Ditt fotografi fångar känslor på ett unikt sätt!',
                'Din skaparglädje är en förebild!',
                'Din förmåga att se skönhet i det vardagliga är beundransvärd!',
                'Ditt arbete är en konstnärlig bedrift!',
                'Du fångar ögonblickens magi med din kamera!',
                'Dina bilder berör hjärtat och själen!',
                'Ditt fotografiska öga är en skatt!',
                'Ditt arbete är en hyllning till livet!',
                'Ditt fotografi är en resa genom tid och rum!',
                'Dina bilder talar ett universellt språk!',
                'Ditt bidrag till fotografiets värld är ovärderligt!',
                'Din kreativa vision är en gåva!',
                'Din tekniska skicklighet är imponerande!',
                'Din förmåga att fånga ögonblickets essens är unik!',
                'Ditt arbete är en källa till glädje och inspiration!',
                'Din talang är en skatt som berikar oss alla!',
                'Dina bilder förmedlar djup och betydelse!',
                'Ditt fotografi belyser skönheten i livet!',
                'Ditt arbete är en hyllning till naturen och människan!',
                'Din känsla för ljus och färg är enastående!',
                'Din passion för att utforska nya perspektiv är beundransvärd!',
                'Dina bilder berättar berörande historier!',
                'Du har en unik förmåga att fånga ögonblickets flyktighet!',
                'Ditt fotografi skapar minnen som varar för evigt!',
                'Din skaparkraft är en oändlig källa till inspiration!',
                'Ditt arbete är en konstant källa till glädje och förundran!',
                'Dina bilder är som musik för ögat!',
                'Din förmåga att skapa konst med ljus är fantastisk!',
                'Ditt arbete förenar människor genom skönhet!',
            ];
            sectionParagraph.textContent = kindMessages[Math.floor(Math.random() * kindMessages.length)];

            const logoutButton = document.getElementById('logoutButton');
            const sectionSelect = document.getElementById('sectionSelect');
            const sectionButton = document.getElementById('sectionButton');
            const sectionContent = document.getElementById('sectionContent');

            logoutButton.addEventListener('click', function () {
                fetch('/logout', { method: 'POST', headers: { 'csrf-token': token } })
                    .then((response) => {
                        if (response.status === 200) {
                            window.location.href = '/login';
                        }
                    })
                    .catch((error) => {
                        alert('Error logging out: ' + error.message);
                        console.error(error);
                    });
            });

            sectionButton.addEventListener('click', () => {
                const selectedSection = sectionSelect.value;
                sectionContent.innerHTML = '';
                if (selectedSection === 'showcase') {
                    const paragraph = document.createElement('p');
                    paragraph.textContent =
                        'Showcase photos should be of "facebook" quality and contain your watermark. You can name them whatever you want, they are sorted alphabetically on the website. They should also be in the ".jpg" format. Make sure to replace swedish letters like å, ä, ö, with aa, ae, oe. Don\'t use any special characters.';
                    const label = document.createElement('label');
                    label.textContent = 'Select a Page:';
                    label.setAttribute('for', 'bucketSelect');
                    const bucketSelect = document.createElement('select');
                    bucketSelect.id = 'bucketSelect';
                    const options = [
                        { value: 'carousel', text: 'Home (Photo carousel)' },
                        { value: 'nature', text: 'Nature' },
                        { value: 'animals', text: 'Animals' },
                        { value: 'architectural', text: 'Architectural' },
                        { value: 'portrait', text: 'Portrait' },
                        { value: 'wedding', text: 'Wedding' },
                        { value: 'sport', text: 'Sport' },
                    ];
                    options.forEach((option) => {
                        const optionElement = document.createElement('option');
                        optionElement.value = option.value;
                        optionElement.textContent = option.text;
                        bucketSelect.appendChild(optionElement);
                    });

                    const bucketButton = document.createElement('button');
                    bucketButton.textContent = 'Load';
                    const bucketContent = document.createElement('div');

                    sectionContent.appendChild(paragraph);
                    sectionContent.appendChild(label);
                    sectionContent.appendChild(bucketSelect);
                    sectionContent.appendChild(bucketButton);
                    sectionContent.appendChild(bucketContent);
                    let selectedBucket = bucketSelect.value;

                    bucketButton.addEventListener('click', () => {
                        selectedBucket = bucketSelect.value;
                        if (selectedBucket) {
                            loadItemsFromBucket(selectedBucket, bucketContent);
                        }
                    });
                } else if (selectedSection === 'shop') {
                    const paragraph = document.createElement('p');
                    paragraph.textContent =
                        'Shop photos should be of the highest quality. When you name them make sure to include the price at then end of the name after a space with the letter "e" behind (e.g., "blommor 200e.jpg" or "glass 95e.jpg"). They should also be in the ".jpg" format. The shop photos are also sorted alphabetically on the website. Make sure to replace swedish letters like å, ä, ö, with aa, ae, oe. Don\'t use any special characters.';
                    const paragraph2 = document.createElement('p');
                    paragraph2.textContent =
                        'The photos will be compressed after upload to be displayed on the website. You may need to wait and click the load button again to see the uploaded photos. This takes longer when uploading multiple photos.';
                    const shopContent = document.createElement('div');
                    sectionContent.appendChild(paragraph);
                    sectionContent.appendChild(paragraph2);
                    sectionContent.appendChild(shopContent);
                    loadItemsFromBucket('shop', shopContent);
                }
            });

            function loadItemsFromBucket(bucket, bucketContent) {
                fetch(`/get-photos?bucket=${bucket}`, {
                    headers: {
                        'csrf-token': token,
                    },
                })
                    .then((response) => {
                        if (response.status === 401) {
                            // Refresh the browser on a 401 error
                            location.reload();
                        }
                        return response.json();
                    })
                    .then((data) => {
                        // Clear the existing content in the bucketContent element
                        bucketContent.innerHTML = '';
                        const title = document.createElement('h3');
                        title.textContent = 'Photos in ' + bucket;
                        sectionContent.appendChild(title);
                        const list = document.createElement('ol');
                        bucketContent.appendChild(title);
                        uploadPhotos(bucketContent, bucket);
                        bucketContent.appendChild(list);

                        // Iterate through the items in the data array
                        data.forEach((item) => {
                            const listItem = document.createElement('li');
                            const anchor = document.createElement('a');
                            anchor.href = 'javascript:void(0);';
                            anchor.textContent = item.name;
                            anchor.addEventListener('click', () => {
                                const highlightDiv = document.createElement('div');
                                highlightDiv.style.position = 'fixed';
                                highlightDiv.style.top = 0;
                                highlightDiv.style.left = 0;
                                highlightDiv.style.width = '100%';
                                highlightDiv.style.height = '100%';
                                highlightDiv.style.backgroundColor = 'rgba(0, 0, 0, 0.75)';
                                highlightDiv.style.zIndex = '9999';
                                highlightDiv.addEventListener('click', () => {
                                    document.body.removeChild(highlightDiv);
                                });
                                const highlightPhoto = document.createElement('img');
                                highlightPhoto.src = item.url;
                                highlightPhoto.style.maxWidth = '85%';
                                highlightPhoto.style.maxHeight = '85%';
                                highlightPhoto.style.position = 'absolute';
                                highlightPhoto.style.top = '50%';
                                highlightPhoto.style.left = '50%';
                                highlightPhoto.style.transform = 'translate(-50%, -50%)';
                                highlightDiv.appendChild(highlightPhoto);
                                document.body.appendChild(highlightDiv);
                            });

                            const downloadButton = document.createElement('button');
                            downloadButton.textContent = 'Download';
                            downloadButton.addEventListener('click', () => {
                                fetch(`/download-photo?bucket=${bucket}&name=${item.name}`, {
                                    method: 'GET',
                                    headers: {
                                        'csrf-token': token,
                                    },
                                })
                                    .then((response) => {
                                        if (response.status === 401) {
                                            location.reload();
                                        }
                                        return response.json();
                                    })
                                    .then((data) => {
                                        const url = data.signedUrl;
                                        const a = document.createElement('a');
                                        a.style.display = 'none';
                                        a.href = url;
                                        document.body.appendChild(a);
                                        a.click();
                                        document.body.removeChild(a);
                                    })
                                    .catch((error) => {
                                        alert('Error downloading photo: ' + error.message);
                                        console.error(error);
                                    });
                            });

                            const deleteButton = document.createElement('button');
                            deleteButton.textContent = 'Delete';
                            deleteButton.addEventListener('click', () => {
                                const confirmDelete = window.confirm(
                                    'Are you sure you want to delete this ' + item.name + '?'
                                );

                                if (confirmDelete) {
                                    fetch(`/delete-photo?bucket=${bucket}&name=${item.name}`, {
                                        method: 'DELETE',
                                        headers: {
                                            'csrf-token': token,
                                        },
                                    })
                                        .then((response) => {
                                            if (response.status === 401) {
                                                location.reload();
                                            }
                                            return response.text();
                                        })
                                        .then((data) => {
                                            if (data === 'OK') {
                                                list.removeChild(listItem);
                                            }
                                        })
                                        .catch((error) => {
                                            alert('Unable to delete photo: ' + error.message);
                                            console.error(error);
                                        });
                                }
                            });

                            listItem.appendChild(anchor);
                            listItem.appendChild(downloadButton);
                            listItem.appendChild(deleteButton);
                            list.appendChild(listItem);
                        });
                    })
                    .catch((error) => {
                        alert('Error loading photos:', error.message);
                        console.error(error);
                    });
            }

            function uploadPhotos(parentElement, bucket) {
                const label = document.createElement('label');
                label.textContent = 'Upload photos:';
                label.setAttribute('for', 'files');
                const input = document.createElement('input');
                input.type = 'file';
                input.name = 'files[]';
                input.setAttribute('multiple', true);
                input.accept = '.jpg';
                const uploadButton = document.createElement('button');
                uploadButton.textContent = 'Upload';
                uploadButton.addEventListener('click', () => {
                    const files = input.files;
                    if (files.length === 0) {
                        alert('Please select one or more files to upload.');
                        return;
                    }

                    for (const file of files) {
                        if (!isValidFileName(file.name, bucket)) {
                            alert('Invalid file name: ' + file.name);
                            return;
                        }
                    }

                    const formData = new FormData();
                    for (const file of files) {
                        formData.append('files', file, file.name);
                    }
                    fetch(`/upload-photos?bucket=${bucket}`, {
                        method: 'POST',
                        headers: {
                            'csrf-token': token,
                        },
                        body: formData,
                    })
                        .then((response) => {
                            if (response.status === 401) {
                                // Refresh the browser on a 401 error
                                location.reload();
                            }
                            return response.text();
                        })
                        .then((data) => {
                            if (data === 'OK') {
                                if (bucket === 'shop') {
                                    // Delay to wait for photo compression
                                    setTimeout(() => {
                                        loadItemsFromBucket(bucket, parentElement);
                                    }, 3000);
                                } else {
                                    loadItemsFromBucket(bucket, parentElement);
                                }
                            }
                        })
                        .catch((error) => {
                            alert('Unable to upload photo: ' + error.message);
                            console.error(error);
                        });
                });

                parentElement.appendChild(label);
                parentElement.appendChild(input);
                parentElement.appendChild(uploadButton);
            }

            function isValidFileName(fileName, bucket) {
                let pattern;
                if (bucket === 'shop') {
                    pattern = /^[a-zA-Z0-9\s]+ \d+e\.jpg$/;
                } else {
                    // Regular expression pattern to allow only letters (a-z), numbers (0-9), spaces, and .jpg extension
                    pattern = /^[a-zA-Z0-9\s]+\.jpg$/;
                }
                return pattern.test(fileName);
            }
        </script>
    </body>
</html>
