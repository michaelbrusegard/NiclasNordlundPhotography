name: Deploy to Google Cloud

on:
    push:
        branches:
            - main

jobs:
    Deploy:
        runs-on: ubuntu-latest
        if: "!(contains(github.event.head_commit.message, 'Format code with Prettier'))"
        permissions:
            contents: 'read'
            id-token: 'write'
        steps:
            - uses: actions/checkout@v3
              with:
                  token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      compressPublicPhotos:
                        - 'cloud_functions/compressPublicPhotos/**'
                      deletePublicPhotos:
                        - 'cloud_functions/deletePublicPhotos/**'
                      archivePurchasedPhotos:
                        - 'cloud_functions/archivePurchasedPhotos/**'

            - name: Authenticate with Google Cloud
              uses: google-github-actions/auth@v1
              with:
                  credentials_json: ${{ secrets.GCLOUD_GITHUB_DEPLOYER_SERV_ACC_KEY }}

            - name: Setup GCloud SDK
              uses: google-github-actions/setup-gcloud@v1

            - name: Deploy compressPublicPhotos
              if: steps.filter.outputs.compressPublicPhotos == 'true'
              run: |
                  gcloud functions deploy compressPublicPhotos \
                    --gen2 \
                    --region=europe-north1 \
                    --runtime=nodejs18 \
                    --source=${{ github.workspace }}/cloud_functions/compressPublicPhotos \
                    --entry-point=compressPhoto \
                    --trigger-event-filters=bucket=${{ secrets.GCLOUD_PHOTOS_BUCKET }} \
                    --trigger-event-filters=type=google.cloud.storage.object.v1.finalized \
                    --project=${{ secrets.GCLOUD_PROJECT_ID }} \
                    --set-env-vars GCLOUD_PUBLIC_PHOTOS_BUCKET=${{ secrets.GCLOUD_PUBLIC_PHOTOS_BUCKET }}

            - name: Deploy deletePublicPhotos
              if: steps.filter.outputs.deletePublicPhotos == 'true'
              run: |
                  gcloud functions deploy deletePublicPhotos \
                    --gen2 \
                    --region=europe-north1 \
                    --runtime=nodejs18 \
                    --source=${{ github.workspace }}/cloud_functions/deletePublicPhotos \
                    --entry-point=deletePhoto \
                    --trigger-event-filters=bucket=${{ secrets.GCLOUD_PHOTOS_BUCKET }} \
                    --trigger-event-filters=type=google.cloud.storage.object.v1.deleted \
                    --project=${{ secrets.GCLOUD_PROJECT_ID }} \
                    --set-env-vars GCLOUD_PUBLIC_PHOTOS_BUCKET=${{ secrets.GCLOUD_PUBLIC_PHOTOS_BUCKET }}

            - name: Deploy archivePurchasedPhotos
              if: steps.filter.outputs.archivePurchasedPhotos == 'true'
              run: |
                  gcloud functions deploy archivePurchasedPhotos \
                    --gen2 \
                    --memory 512MB \
                    --region=europe-north1 \
                    --runtime=nodejs18 \
                    --source=${{ github.workspace }}/cloud_functions/archivePurchasedPhotos \
                    --entry-point=createPhotosArchive \
                    --trigger-http \
                    --project=${{ secrets.GCLOUD_PROJECT_ID }} \
                    --set-env-vars GCLOUD_PHOTOS_BUCKET=${{ secrets.GCLOUD_PHOTOS_BUCKET }},GCLOUD_ARCHIVE_BUCKET=${{ secrets.GCLOUD_ARCHIVE_BUCKET }} \
                    --service-account=${{ secrets.GCLOUD_ARCHIVE_PURCHASED_PHOTOS_SERV_ACC_EMAIL }}
