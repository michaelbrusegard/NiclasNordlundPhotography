name: Deploy to Google Cloud

on:
    push:
        branches:
            - main

jobs:
    Deploy:
        runs-on: ubuntu-latest
        if: "!(contains(github.event.head_commit.message, 'style: :art: format code with Prettier'))"
        permissions:
            contents: "read"
            id-token: "write"
        steps:
            - uses: actions/checkout@v3
              with:
                  token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

            - uses: 73h/gae-app-yaml-replace-env-variables@v0.3
              env:
                SERVER_URL: ${{ secrets.SERVER_URL }}
                PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                REPOSITORY: ${{ secrets.REPOSITORY }}
                USER_AGENT: ${{ secrets.USER_AGENT }}
                OWNER: ${{ secrets.OWNER }}
                ARCHIVE_PURCHASED_PHOTOS_FUNCTION_URL: ${{ secrets.ARCHIVE_PURCHASED_PHOTOS_FUNCTION_URL }}
                PHOTOS_BUCKET: ${{ secrets.PHOTOS_BUCKET }}
                PUBLIC_PHOTOS_BUCKET: ${{ secrets.PUBLIC_PHOTOS_BUCKET }}
                PHOTO_CAROUSEL_BUCKET: ${{ secrets.PHOTO_CAROUSEL_BUCKET }}
                NATURE_SHOWCASE_BUCKET: ${{ secrets.NATURE_SHOWCASE_BUCKET }}
                ANIMALS_SHOWCASE_BUCKET: ${{ secrets.ANIMALS_SHOWCASE_BUCKET }}
                ARCHITECTURAL_SHOWCASE_BUCKET: ${{ secrets.ARCHITECTURAL_SHOWCASE_BUCKET }}
                PORTRAIT_SHOWCASE_BUCKET: ${{ secrets.PORTRAIT_SHOWCASE_BUCKET }}
                WEDDING_SHOWCASE_BUCKET: ${{ secrets.WEDDING_SHOWCASE_BUCKET }}
                SPORT_SHOWCASE_BUCKET: ${{ secrets.SPORT_SHOWCASE_BUCKET }}
                SECRET_KEY: ${{ secrets.SECRET_KEY }}
                WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
              with:
                app_yaml_path: 'website/app.yaml'

            - uses: dorny/paths-filter@v2
              with:
                  filters: |
                      compressPublicPhotos:
                        - 'functions/compressPublicPhotos/**'
                      deletePublicPhotos:
                        - 'functions/deletePublicPhotos/**'
                      archivePurchasedPhotos:
                        - 'functions/archivePurchasedPhotos/**'
                      website:
                        - 'website/**'

            - name: Authenticate with Google Cloud
              uses: google-github-actions/auth@v1
              with:
                  credentials_json: ${{ secrets.GCLOUD_GITHUB_DEPLOYER_SERV_ACC_KEY }}

            - name: Setup Google Cloud SDK
              uses: google-github-actions/setup-gcloud@v1

            - name: Deploy compressPublicPhotos
              if: steps.filter.outputs.compressPublicPhotos == 'true'
              run: |
                  gcloud functions deploy compressPublicPhotos \
                    --gen2 \
                    --region=europe-north1 \
                    --runtime=nodejs18 \
                    --source=${{ github.workspace }}/functions/compressPublicPhotos \
                    --entry-point=compressPhoto \
                    --trigger-event-filters=bucket=${{ secrets.PHOTOS_BUCKET }} \
                    --trigger-event-filters=type=google.cloud.storage.object.v1.finalized \
                    --project=${{ secrets.PROJECT_ID }} \
                    --set-env-vars PUBLIC_PHOTOS_BUCKET=${{ secrets.PUBLIC_PHOTOS_BUCKET }}

            - name: Deploy deletePublicPhotos
              if: steps.filter.outputs.deletePublicPhotos == 'true'
              run: |
                  gcloud functions deploy deletePublicPhotos \
                    --gen2 \
                    --region=europe-north1 \
                    --runtime=nodejs18 \
                    --source=${{ github.workspace }}/functions/deletePublicPhotos \
                    --entry-point=deletePhoto \
                    --trigger-event-filters=bucket=${{ secrets.PHOTOS_BUCKET }} \
                    --trigger-event-filters=type=google.cloud.storage.object.v1.deleted \
                    --project=${{ secrets.PROJECT_ID }} \
                    --set-env-vars PUBLIC_PHOTOS_BUCKET=${{ secrets.PUBLIC_PHOTOS_BUCKET }}

            - name: Deploy archivePurchasedPhotos
              if: steps.filter.outputs.archivePurchasedPhotos == 'true'
              run: |
                  gcloud functions deploy archivePurchasedPhotos \
                    --gen2 \
                    --memory 512MB \
                    --region=europe-north1 \
                    --runtime=nodejs18 \
                    --source=${{ github.workspace }}/functions/archivePurchasedPhotos \
                    --entry-point=createPhotosArchive \
                    --trigger-http \
                    --project=${{ secrets.PROJECT_ID }} \
                    --set-env-vars PHOTOS_BUCKET=${{ secrets.PHOTOS_BUCKET }},ARCHIVE_BUCKET=${{ secrets.ARCHIVE_BUCKET }} \
                    --service-account=${{ secrets.GCLOUD_ARCHIVE_PURCHASED_PHOTOS_SERV_ACC_EMAIL }}

            - name: Deploy website
              if: steps.filter.outputs.website == 'true'
              run: |
                  gcloud app deploy ${{ github.workspace }}/website/app.yaml \
                    --project=${{ secrets.PROJECT_ID }}
